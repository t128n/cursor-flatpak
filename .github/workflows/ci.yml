on:
  workflow_dispatch:
name: Package Cursor as Flatpak
jobs:
  build-flatpak:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed to create releases
    container:
      image: ghcr.io/flathub-infra/flatpak-github-actions:freedesktop-23.08
      options: --privileged
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Check if new Cursor version is available
        run: |
          response=$(curl -s "https://www.cursor.com/api/download?platform=linux-x64&releaseTrack=stable")
          cursor_version_val=$(echo "$response" | jq -r '.version')
          cursor_download_url_val=$(echo "$response" | jq -r '.downloadUrl')
          echo "cursor_version=$cursor_version_val" >> $GITHUB_ENV
          echo "cursor_download_url=$cursor_download_url_val" >> $GITHUB_ENV

          response=$(curl -s "https://api.github.com/repos/t128n/cursor-flatpak/releases/latest")
          flatpak_version_val=$(echo "$response" | jq -r '.tag_name')
          echo "flatpak_version=$flatpak_version_val" >> $GITHUB_ENV

          if [ "$cursor_version_val" == "$flatpak_version_val" ]; then
            echo "Cursor version $cursor_version_val matches Flatpak version $flatpak_version_val"
            echo "No need to build Flatpak"
            exit 0
          else
            echo "Cursor version $cursor_version_val does not match Flatpak version $flatpak_version_val"
            echo "Building Flatpak"
            if [ -f /tmp/cursor.AppImage ]; then
              echo "Found /tmp/cursor.AppImage (likely from cache) for version $cursor_version_val. Skipping download."
            else
              echo "Downloading Cursor from $cursor_download_url_val..."
              curl -L -o /tmp/cursor.AppImage "$cursor_download_url_val"
            fi
          fi

      - name: Extract AppImage and list contents
        run: |
          chmod +x /tmp/cursor.AppImage
          /tmp/cursor.AppImage --appimage-extract 

          if [ ! -d "squashfs-root" ]; then
            echo "ERROR: squashfs-root directory DOES NOT exist after extraction attempt."
            exit 1
          fi
          
      - uses: flatpak/flatpak-github-actions/flatpak-builder@v6
        with:
          bundle: com.cursor.Cursor-${{ env.cursor_version }}.flatpak
          manifest-path: com.cursor.Cursor.json
          cache-key: flatpak-builder-${{ github.sha }}
          branch: stable
