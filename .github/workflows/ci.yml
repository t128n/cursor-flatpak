name: Package Cursor as Flatpak

on:
  workflow_dispatch:

jobs:
  build-flatpak:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed to create releases
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl jq

      - name: Cache APT packages
        uses: actions/cache@v4
        with:
          path: /var/cache/apt/archives
          key: ${{ runner.os }}-apt-${{ hashFiles('**/lockfiles') }} # Using a generic key, adjust if needed
          restore-keys: |
            ${{ runner.os }}-apt-

      - name: Check if new Cursor version is available
        run: |
          response=$(curl -s "https://www.cursor.com/api/download?platform=linux-x64&releaseTrack=stable")
          cursor_version_val=$(echo "$response" | jq -r '.version')
          cursor_download_url_val=$(echo "$response" | jq -r '.downloadUrl')
          echo "cursor_version=$cursor_version_val" >> $GITHUB_ENV
          echo "cursor_download_url=$cursor_download_url_val" >> $GITHUB_ENV

          response=$(curl -s "https://api.github.com/repos/t128n/cursor-flatpak/releases/latest")
          flatpak_version_val=$(echo "$response" | jq -r '.tag_name')
          echo "flatpak_version=$flatpak_version_val" >> $GITHUB_ENV

          if [ "$cursor_version_val" == "$flatpak_version_val" ]; then
            echo "Cursor version $cursor_version_val matches Flatpak version $flatpak_version_val"
            echo "No need to build Flatpak"
            exit 0
          else
            echo "Cursor version $cursor_version_val does not match Flatpak version $flatpak_version_val"
            echo "Building Flatpak"
            if [ -f /tmp/cursor.AppImage ]; then
              echo "Found /tmp/cursor.AppImage (likely from cache) for version $cursor_version_val. Skipping download."
            else
              echo "Downloading Cursor from $cursor_download_url_val..."
              curl -L -o /tmp/cursor.AppImage "$cursor_download_url_val"
            fi
          fi

      - name: Cache Cursor AppImage
        uses: actions/cache@v4
        with:
          path: /tmp/cursor.AppImage
          key: ${{ runner.os }}-cursor-appimage-${{ env.cursor_version }}
          restore-keys: |
            ${{ runner.os }}-cursor-appimage-

      - name: Extract AppImage and list contents
        run: |
          chmod +x /tmp/cursor.AppImage
          /tmp/cursor.AppImage --appimage-extract 

          if [ ! -d "squashfs-root" ]; then
            echo "ERROR: squashfs-root directory DOES NOT exist after extraction attempt."
            exit 1
          fi

      - name: Install Flatpak
        run: |
          sudo apt-get update
          sudo apt-get install -y flatpak flatpak-builder

      - name: Add Flatpak remote
        run: |
          flatpak remote-add --user --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo

      - name: Install Flatpak runtime
        run: |
          flatpak install --user --noninteractive flathub org.freedesktop.Sdk//23.08 \
            org.freedesktop.Sdk.Extension.node18//23.08 -y

      - name: Cache Flatpak runtime
        uses: actions/cache@v4
        with:
          path: ~/.local/share/flatpak
          key: ${{ runner.os }}-flatpak-runtime-23.08-node18
          restore-keys: |
            ${{ runner.os }}-flatpak-runtime-

      - name: Cache Flatpak Builder
        uses: actions/cache@v4
        with:
          path: ~/.cache/flatpak-builder
          key: ${{ runner.os }}-flatpak-builder-${{ hashFiles('**/com.cursor.Cursor.json') }}
          restore-keys: |
            ${{ runner.os }}-flatpak-builder-

      - name: Build Flatpak
        run: |
          flatpak-builder --force-clean --install --user --install-deps-from=flathub \
            build-dir com.cursor.Cursor.json

      - name: Create release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release create ${{ env.cursor_version }} --title "Cursor ${{ env.cursor_version }}" --notes "Release ${{ env.cursor_version }}"

